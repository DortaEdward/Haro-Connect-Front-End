{"remainingRequest":"/Users/edwarddorta/dev/portfolio/haro-connects/client/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/edwarddorta/dev/portfolio/haro-connects/client/src/components/PostUpdate.vue?vue&type=template&id=429ff339","dependencies":[{"path":"/Users/edwarddorta/dev/portfolio/haro-connects/client/src/components/PostUpdate.vue","mtime":1626700633864},{"path":"/Users/edwarddorta/dev/portfolio/haro-connects/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/edwarddorta/dev/portfolio/haro-connects/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/edwarddorta/dev/portfolio/haro-connects/client/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1624994109000},{"path":"/Users/edwarddorta/dev/portfolio/haro-connects/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/edwarddorta/dev/portfolio/haro-connects/client/node_modules/vue-loader-v16/dist/index.js","mtime":1624994108000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGZvcm0gY2xhc3M9J2NvbnRhaW5lcic+CiAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIG15LTEiPgogICAgICA8bGFiZWwgY2xhc3M9J215LTQnPkNvbnRlbnQ8L2xhYmVsPgogICAgICA8dGV4dGFyZWEKICAgICAgdi1tb2RlbD0iY29udGVudFJlZiIKICAgICAgdHlwZT0idGV4dCIKICAgICAgY2xhc3M9ImZvcm0tY29udHJvbCIvPgogICAgPC9kaXY+CiAgICA8YnV0dG9uCiAgICAgIHR5cGU9ImJ1dHRvbiIKICAgICAgQGNsaWNrPSd1cGRhdGVQb3N0JwogICAgICBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IG15LTEiPlN1Ym1pdCBVcGRhdGU8L2J1dHRvbj4KICA8L2Zvcm0+Cg=="},{"version":3,"sources":["/Users/edwarddorta/dev/portfolio/haro-connects/client/src/components/PostUpdate.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/edwarddorta/dev/portfolio/haro-connects/client/src/components/PostUpdate.vue","sourceRoot":"","sourcesContent":["<template>\n  <form class='container'>\n    <div class=\"form-group my-1\">\n      <label class='my-4'>Content</label>\n      <textarea\n      v-model=\"contentRef\"\n      type=\"text\"\n      class=\"form-control\"/>\n    </div>\n    <button\n      type=\"button\"\n      @click='updatePost'\n      class=\"btn btn-primary my-1\">Submit Update</button>\n  </form>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\n\nexport default {\n  setup() {\n    const contentRef = ref('');\n    const route = useRoute();\n    const router = useRouter();\n    const getPost = async (id) => {\n      if (localStorage.tokken) {\n        const url = `${process.env.VUE_APP_BASE_APIURL}/api/v1/posts/${id}`;\n        console.log(url);\n        const response = await fetch(url, {\n          headers: {\n            Authorization: `Bearer ${localStorage.tokken}`,\n          },\n        });\n        const json = await response.json();\n        contentRef.value = json.data.content;\n      }\n    };\n    const updatePost = async () => {\n      if (localStorage.tokken) {\n        console.log(contentRef.value);\n        const url = `${process.env.VUE_APP_BASE_APIURL}/api/v1/posts/update/${route.params.postId}`;\n        const response = await fetch(url, {\n          method: 'PUT',\n          headers: {\n            Authorization: `Bearer ${localStorage.tokken}`,\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            content: contentRef.value,\n          }),\n        });\n        console.log(await response.json());\n        if (response.ok) {\n          router.push({ name: 'Home' });\n        }\n      }\n    };\n\n    onMounted(() => {\n      getPost(route.params.postId);\n    });\n    return {\n      contentRef,\n      updatePost,\n    };\n  },\n};\n</script>\n\n<style>\n\n</style>\n"]}]}